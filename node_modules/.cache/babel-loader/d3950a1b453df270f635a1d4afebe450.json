{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Becket\\\\Desktop\\\\Help Queue React\\\\src\\\\components\\\\TicketControl.js\";\nimport React from 'react';\nimport NewTicketForm from './NewTicketForm';\nimport TicketList from './TicketList';\nimport TicketDetail from './TicketDetail';\nimport EditTicketForm from './EditTicketForm';\n\nclass TicketControl extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      if (this.state.selectedTicket != null) {\n        this.setState({\n          formVisibleOnPage: false,\n          selectedTicket: null,\n          editing: false\n        });\n      } else {\n        this.setState(prevState => ({\n          formVisibleOnPage: !prevState.formVisibleOnPage\n        }));\n      }\n    };\n\n    this.handleAddingNewTicketToList = newTicket => {\n      const newMainTicketList = this.state.mainTicketList.concat(newTicket);\n      this.setState({\n        mainTicketList: newMainTicketList,\n        formVisibleOnPage: false\n      });\n    };\n\n    this.handleChangingSelectedTicket = id => {\n      const selectedTicket = this.state.mainTicketList.filter(ticket => ticket.id === id)[0];\n      this.setState({\n        selectedTicket: selectedTicket\n      });\n    };\n\n    this.handleDeletingTicket = id => {\n      const newMainTicketList = this.state.mainTicketList.filter(ticket => ticket.id !== id);\n      this.setState({\n        mainTicketList: newMainTicketList,\n        selectedTicket: null\n      });\n    };\n\n    this.handleEditClick = () => {\n      this.setState({\n        editing: true\n      });\n    };\n\n    this.handleEditingTicketInList = ticketToEdit => {\n      const editedMainTicketList = this.state.mainTicketList.filter(ticket => ticket.id !== this.state.selectedTicket.id).concat(ticketToEdit);\n      this.setState({\n        mainTicketList: editedMainTicketList,\n        editing: false,\n        selectedTicket: null\n      });\n    };\n\n    this.state = {\n      formVisibleOnPage: false,\n      mainTicketList: [],\n      selectedTicket: null,\n      editing: false\n    };\n  }\n\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.state.editing) {\n      currentlyVisibleState = /*#__PURE__*/React.createElement(EditTicketForm, {\n        ticket: this.state.selectedTicket,\n        onEditTicket: this.handleEditingTicketInList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }\n      });\n      buttonText = \"Return to Ticket List\";\n    } else if (this.state.selectedTicket != null) {\n      currentlyVisibleState = /*#__PURE__*/React.createElement(TicketDetail, {\n        ticket: this.state.selectedTicket,\n        onClickingDelete: this.handleDeletingTicket,\n        onClickingEdit: this.handleEditClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      });\n      buttonText = \"Return to Ticket List\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = /*#__PURE__*/React.createElement(NewTicketForm, {\n        onNewTicketCreation: this.handleAddingNewTicketToList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 31\n        }\n      });\n      buttonText = \"Return to Ticket List\";\n    } else {\n      currentlyVisibleState = /*#__PURE__*/React.createElement(TicketList, {\n        ticketList: this.state.mainTicketList,\n        onTicketSelection: this.handleChangingSelectedTicket,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }\n      });\n      buttonText = \"Add Ticket\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, currentlyVisibleState, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, buttonText));\n  }\n\n}\n\nexport default TicketControl;","map":{"version":3,"sources":["C:/Users/Becket/Desktop/Help Queue React/src/components/TicketControl.js"],"names":["React","NewTicketForm","TicketList","TicketDetail","EditTicketForm","TicketControl","Component","constructor","props","handleClick","state","selectedTicket","setState","formVisibleOnPage","editing","prevState","handleAddingNewTicketToList","newTicket","newMainTicketList","mainTicketList","concat","handleChangingSelectedTicket","id","filter","ticket","handleDeletingTicket","handleEditClick","handleEditingTicketInList","ticketToEdit","editedMainTicketList","render","currentlyVisibleState","buttonText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NewTicketForm from './NewTicketForm';\nimport TicketList from './TicketList';\nimport TicketDetail from './TicketDetail';\nimport EditTicketForm from './EditTicketForm';\n\nclass TicketControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      mainTicketList: [],\n      selectedTicket: null,\n      editing: false\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedTicket != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedTicket: null,\n        editing: false\n      });\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage,\n      }));\n    }\n  }\n\n  handleAddingNewTicketToList = (newTicket) => {\n    const newMainTicketList = this.state.mainTicketList.concat(newTicket);\n    this.setState({\n      mainTicketList: newMainTicketList,\n      formVisibleOnPage: false\n    });\n  }\n\n  handleChangingSelectedTicket = (id) => {\n    const selectedTicket = this.state.mainTicketList.filter(ticket => ticket.id === id)[0];\n    this.setState({selectedTicket: selectedTicket});\n  }\n\n  handleDeletingTicket = (id) => {\n    const newMainTicketList = this.state.mainTicketList.filter(ticket => ticket.id !== id);\n    this.setState({\n      mainTicketList: newMainTicketList,\n      selectedTicket: null\n    });\n  }\n\n  handleEditClick = () => {\n    this.setState({editing: true});\n  }\n\n  handleEditingTicketInList = (ticketToEdit) => {\n    const editedMainTicketList = this.state.mainTicketList\n      .filter(ticket => ticket.id !== this.state.selectedTicket.id)\n      .concat(ticketToEdit);\n    this.setState({\n      mainTicketList: editedMainTicketList,\n      editing: false,\n      selectedTicket: null\n    });\n  }\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    if (this.state.editing ) {      \n      currentlyVisibleState = <EditTicketForm ticket = {this.state.selectedTicket} onEditTicket = {this.handleEditingTicketInList} />\n      buttonText = \"Return to Ticket List\";\n    } else if (this.state.selectedTicket != null) {\n      currentlyVisibleState = \n      <TicketDetail \n        ticket = {this.state.selectedTicket} \n        onClickingDelete = {this.handleDeletingTicket} \n        onClickingEdit = {this.handleEditClick} />\n      buttonText = \"Return to Ticket List\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewTicketForm onNewTicketCreation={this.handleAddingNewTicketToList}  />;\n      buttonText = \"Return to Ticket List\";\n    } else {\n      currentlyVisibleState = <TicketList ticketList={this.state.mainTicketList} onTicketSelection={this.handleChangingSelectedTicket} />;\n      buttonText = \"Add Ticket\";\n    }\n    return (\n      <React.Fragment>\n        {currentlyVisibleState}\n        <button onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    );\n  }\n\n}\n\nexport default TicketControl;"]},"metadata":{},"sourceType":"module"}